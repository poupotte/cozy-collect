{
  "name": "cozy-collect",
  "version": "1.0.5",
  "main": "src/index.jsx",
  "scripts": {
    "build": "npm run build:browser",
    "build:browser": "NODE_ENV=browser:production npm run commons:build",
    "build:mobile": "NODE_ENV=mobile:production npm run commons:build",
    "clean:browser": "rm -rf build/*",
    "clean:mobile": "rm -rf mobile/www/*",
    "commons:build": "cozy-scripts build",
    "commons:watch": "cozy-scripts watch",
    "commons:watch:standalone": "cozy-scripts standalone",
    "deploy": "git-directory-deploy --directory build/ --branch ${DEPLOY_BRANCH:-build} --repo=${DEPLOY_REPOSITORY:-https://$GITHUB_TOKEN@github.com/cozy/cozy-collect.git}",
    "cozyPublish": "git fetch origin ${DEPLOY_BRANCH:-build}:${DEPLOY_BRANCH:-build} && cozy-app-publish --token $REGISTRY_TOKEN --build-commit $(git rev-parse ${DEPLOY_BRANCH:-build})",
    "tx": "tx pull --all || true",
    "precommons:build": "npm-run-all lint tx",
    "prebuild:browser": "npm run clean:browser",
    "prebuild:mobile": "npm run clean:mobile",
    "pretest": "npm run lint",
    "prewatch:browser": "npm run clean:browser",
    "prewatch:mobile": "npm run clean:mobile",
    "lint": "npm-run-all --parallel 'lint:*'",
    "lint:styles": "stylint src/styles --config ./.stylintrc",
    "lint:js": "eslint \"{src,test}/**/*.{js,jsx}\"",
    "precommit": "lint-staged",
    "test": "jest --verbose --coverage",
    "test:watch": "jest --verbose --coverage --watch",
    "watch": "npm run watch:browser",
    "watch:browser": "NODE_ENV=browser:development npm run commons:watch",
    "watch:mobile": "NODE_ENV=mobile:development npm run commons:watch",
    "watch:browser:standalone": "NODE_ENV=browser:development npm run commons:watch:standalone",
    "watch:mobile:standalone": "NODE_ENV=mobile:development npm run commons:watch:standalone",
    "watch:standalone": "npm run watch:browser:standalone",
    "android:run": "cd mobile ; cordova run android --device ; cd ..",
    "android:run:emulator": "cd mobile ; cordova run android --emulator ; cd ..",
    "android:release": "npm run build:mobile && cd mobile ; cordova build android --release ; cd ..",
    "android:signed": "npm run android:release && cd mobile ; apksigner sign --ks keys/android/cozy-collect-release-key.jks --out build/android/cozy-collect.apk platforms/android/build/outputs/apk/android-release-unsigned.apk ; cd ..",
    "android:publish": "npm run android:signed && cd mobile ; fastlane supply ; cd ..",
    "ios:run": "cd mobile ; cordova run ios --device ; cd ..",
    "ios:run:emulator": "cd mobile ; cordova run ios --emulator ; cd .."
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cozy/cozy-collect.git"
  },
  "author": "Cozy Cloud <contact@cozycloud.cc> (https://cozy.io/)",
  "contributors": [
    "CPatchane"
  ],
  "license": "AGPL-3.0",
  "bugs": {
    "url": "https://github.com/cozy/cozy-collect/issues"
  },
  "homepage": "https://github.com/cozy/cozy-collect#readme",
  "dependencies": {
    "cozy-scripts": "0.8.0",
    "date-fns": "1.29.0",
    "enzyme-adapter-react-15": "1.0.5",
    "eslint": "4.9.0",
    "eslint-config-prettier": "2.9.0",
    "eslint-config-standard": "10.2.1",
    "eslint-config-standard-react": "6.0.0",
    "eslint-plugin-import": "2.12.0",
    "eslint-plugin-node": "6.0.1",
    "eslint-plugin-prettier": "2.6.0",
    "eslint-plugin-promise": "3.7.0",
    "eslint-plugin-react": "7.8.2",
    "eslint-plugin-standard": "3.1.0",
    "expose-loader": "0.7.5",
    "husky": "0.14.3",
    "intro.js": "2.9.3",
    "lint-staged": "4.3.0",
    "lodash": "4.17.10",
    "piwik-react-router": "0.12.1",
    "preact": "8.2.7",
    "preact-compat": "3.18.0",
    "prettier": "1.11.1",
    "react-markdown": "2.5.1",
    "react-redux": "5.0.7",
    "react-router-dom": "4.2.2",
    "redux": "3.7.2",
    "redux-logger": "3.0.6",
    "redux-thunk": "2.2.0",
    "timeago-react": "2.0.0"
  },
  "devDependencies": {
    "babel-core": "6.26.3",
    "babel-eslint": "8.2.3",
    "babel-loader": "7.1.4",
    "babel-plugin-transform-class-properties": "6.24.1",
    "babel-plugin-transform-object-rest-spread": "6.26.0",
    "babel-plugin-transform-react-jsx": "6.24.1",
    "babel-plugin-transform-runtime": "6.23.0",
    "babel-polyfill": "6.26.0",
    "babel-preset-env": "1.7.0",
    "babel-preset-es2015": "6.24.1",
    "babel-preset-react": "6.24.1",
    "babel-runtime": "6.26.0",
    "cozy-bar": "5.0.1",
    "cozy-client-js": "0.9.0",
    "cozy-ui": "9.0.0",
    "enzyme": "3.3.0",
    "eslint-loader": "2.0.0",
    "file-loader": "1.1.6",
    "git-directory-deploy": "1.5.1",
    "identity-obj-proxy": "3.0.0",
    "jest": "18.1.0",
    "npm-run-all": "4.1.3",
    "react": "15.6.1",
    "react-dom": "15.6.1",
    "react-test-renderer": "15.6.1",
    "stylint": "1.5.9",
    "stylus": "0.54.5",
    "url-search-params-polyfill": "4.0.0",
    "webpack": "3.12.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "jsx",
      "json",
      "styl"
    ],
    "moduleDirectories": [
      "node_modules",
      "src"
    ],
    "moduleNameMapper": {
      "^redux-cozy-client$": "<rootDir>/src/lib/redux-cozy-client",
      "\\.(png|gif|jpe?g|svg)$": "<rootDir>/test/__mocks__/fileMock.js",
      "styles": "identity-obj-proxy"
    },
    "transformIgnorePatterns": [
      "node_modules/(?!cozy-ui)"
    ],
    "globals": {
      "__ALLOW_HTTP__": false,
      "__TARGET__": "browser",
      "__SENTRY_TOKEN__": "token",
      "cozy": {}
    }
  },
  "eslintConfig": {
    "extends": [
      "standard",
      "standard-react",
      "prettier",
      "prettier/react",
      "prettier/standard"
    ],
    "plugins": [
      "react",
      "prettier",
      "standard"
    ],
    "parser": "babel-eslint",
    "parserOptions": {
      "ecmaFeatures": {
        "jsx": true
      }
    },
    "rules": {
      "prettier/prettier": "error",
      "react/prop-types": [
        2,
        {
          "skipUndeclared": true
        }
      ],
      "react/jsx-no-bind": 1
    },
    "env": {
      "browser": true,
      "jest": true
    }
  },
  "prettier": {
    "semi": false,
    "singleQuote": true
  },
  "lint-staged": {
    "{src,test}/**/*.{js,jsx}": [
      "prettier --write"
    ]
  }
}
